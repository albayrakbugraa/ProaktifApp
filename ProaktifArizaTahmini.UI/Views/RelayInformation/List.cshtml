@using ProaktifArizaTahmini.BLL.Models.RequestModel;
@using ProaktifArizaTahmini.CORE.Entities;
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common;
@model RelayInformationFilterParams

@{
    ViewData["Title"] = "Röle Listesi";
    int counter = (Model.RelayInformationList.PageNumber - 1) * Model.RelayInformationList.PageSize + 1;
}

<div class="d-flex justify-content-between">
    <div class="d-flex align-items-center justify-content-around">
        <a style="margin-right:20px; margin-left:25px;" type="button" class="btn btn-success" asp-action="Create">Yeni Oluştur</a>
        <form class="d-flex justify-content-between" id="uploadExcel" method="post" enctype="multipart/form-data">
            <input style="margin-right:20px;" type="file" class="form-control" id="input" name="excelFile" accept=".xls,.xlsx" />
            <button style="margin-right:20px;" type="submit" class="btn btn-primary" title="Excel dosyası yükle">Yükle</button>
        </form>
        <div>
            @if (!string.IsNullOrEmpty(ViewBag.ExcelInputError))
            {
                <span class="text-danger">
                    <p id="excel-message" class="fw-bold" style="margin-top:12px;">@ViewBag.ExcelInputError</p>
                </span>
            }
            else
            {
                <p style="margin-top:12px;" id="excel-message">Excel'den verileri almak için dosya yükleyin.</p>
            }

            <div id="loading-indicator" class="d-flex align-items-center d-none text-primary">
                <div class="spinner-border ms-auto" role="status" aria-hidden="true"></div>
                <strong style="margin-left:8px;">Yükleniyor...</strong>
            </div>
        </div>
        <div style="margin-left:30px;" id="info-message">
            @if (ViewBag.DuplicateRelaysCount > 0)
            {
                <span class="text-danger">
                    <p id="info-message" class="fw-bold" style="margin-top:12px;">Aynı Tm_Kv_Hücre içeren röleler tekrar eklenemez. Toplam: @ViewBag.DuplicateRelaysCount</p>
                </span>
            }

            @if (ViewBag.IncompatibleRelaysCount > 0)
            {
                <span class="text-danger">
                    <p id="info-message" class="fw-bold" style="margin-top:12px;">Röle modeli Schneider veya ABB olmadığı için eklenemedi. Toplam: @ViewBag.IncompatibleRelaysCount</p>
                </span>

            }
            @if (ViewBag.BlankRowRelaysCount > 0)
            {
                <span class="text-danger">
                    <p id="info-message" class="fw-bold" style="margin-top:12px;">Röle bilgilerinde boş alanlar mevcut. Toplam: @ViewBag.BlankRowRelaysCount</p>
                </span>

            }

        </div>

    </div>
</div>




<div style="max-height: 680px; overflow-y: scroll; margin-top:20px;">
    <div class="table-container">
        <form asp-action="List" method="get">
            <div class="filter-container">
                <table class="table table-striped">
                    <thead>
                        <tr class="d-flex">
                            <th></th>
                            <th><input type="text" class="form-control" id="SearchString" placeholder="TM No" name="FilterTextTm" value="@Model.CurrentFilterTm" /></th>
                            <th><input type="text" class="form-control" id="SearchString" placeholder="kV" name="filterTextKv" value="@Model.CurrentFilterKv" /></th>
                            <th><input type="text" class="form-control" id="SearchString" placeholder="Hücre No" name="filterTextHucre" value="@Model.CurrentFilterHucre" /></th>
                            <th><input type="text" class="form-control" id="SearchString" placeholder="Fider Adı" name="filterTextFider" value="@Model.CurrentFilterFider" /></th>
                            <th><input type="text" class="form-control" id="SearchString" placeholder="IP" name="filterTextIp" value="@Model.CurrentFilterIp" /></th>
                            <th><input type="text" class="form-control" id="SearchString" placeholder="Röle Model" name="filterTextRole" value="@Model.CurrentFilterRole" /></th>
                            <th><button style="margin-left:20px;" type="submit" class="btn btn-primary">Ara</button></th>
                        </tr>
                    </thead>
                </table>
            </div>
        </form>
        @if (ViewBag.ErrorMessage != null)
        {
            <div class="alert alert-danger">
                <h4>Hata!</h4>
                <p>Minimum karakter sınırını karşılamayan giriş(ler) tespit edildi.</p>
                <p>@ViewBag.ErrorMessage</p>
            </div>
        }
        <table class="table table-striped" id="example">
            <thead>
                <tr>
                    <th>#</th>
                    <th>TM No</th>
                    <th>kV</th>
                    <th>Hücre No</th>
                    <th>Fider Adı</th>
                    <th>IP</th>
                    <th>Role Model</th>
                    <th>Kullanıcı Adı</th>
                    <th>Şifre </th>
                    <th>Aksiyonlar</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    @foreach (var item in Model.RelayInformationList)
                    {
                        <tr>
                            <td>
                                @counter
                            </td>
                            <td>@item.TmNo</td>
                            <td>@item.kV</td>
                            <td>@item.HucreNo</td>
                            <td>@item.FiderName</td>
                            <td>@item.IP</td>
                            <td>@item.RoleModel</td>
                            <td>
                                <span class="password" data-password="@item.User">******</span>
                                <i class="icon" onclick="togglePassword(this)"><img src="~/img/eye-fill.svg" /></i>
                            </td>
                            <td>
                                <span class="password" data-password="@item.Password">******</span>
                                <i class="icon" onclick="togglePassword(this)"><img src="~/img/eye-fill.svg" /></i>
                            </td>

                            <td>
                                <a asp-action="Edit" asp-route-id="@item.ID" style=" text-decoration: none;">
                                    <img style="width: 16px;" src="~/img/edit-solid.svg" />
                                </a> |
                                <a asp-action="Delete" asp-route-id="@item.ID" style=" text-decoration: none;">
                                    <img style="width: 16px;" src="~/img/trash-alt-solid.svg" />
                                </a>
                            </td>
                        </tr>
                        counter++;
                    }
                }
            </tbody>
        </table>
    </div>
</div>
<br />
<div class="d-flex justify-content-between align-items-center">
    <div>
        Toplam @Model.RelayInformationList.TotalItemCount kayıt bulundu. Bu sayfada @Model.RelayInformationList.FirstItemOnPage ile @Model.RelayInformationList.LastItemOnPage arası kayıtlar gösteriliyor.
    </div>
    <div class="d-flex justify-content-end flex-nowrap">
        <div>
            <form id="pageSizeForm" method="post">
                <select class="form-select" id="pageSizeSelect" name="PageSize">
                    <option disabled selected>@ViewBag.PageSize</option>
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                    <input type="hidden" class="form-control" id="SearchString" placeholder="TM No" name="filterTextTm" value="@Model.CurrentFilterTm" />
                    <input type="hidden" class="form-control" id="SearchString" placeholder="kV" name="filterTextKv" value="@Model.CurrentFilterKv" />
                    <input type="hidden" class="form-control" id="SearchString" placeholder="Hücre No" name="filterTextHucre" value="@Model.CurrentFilterHucre" />
                    <input type="hidden" class="form-control" id="SearchString" placeholder="Fider Adı" name="filterTextFider" value="@Model.CurrentFilterFider" />
                    <input type="hidden" class="form-control" id="SearchString" placeholder="IP" name="filterTextIp" value="@Model.CurrentFilterIp" />
                    <input type="hidden" class="form-control" id="SearchString" placeholder="Röle Model" name="filterTextRole" value="@Model.CurrentFilterRole" />
                </select>
            </form>
        </div>
        <div style="margin-left:10px;">

            @Html.PagedListPager(Model.RelayInformationList, page => Url.Action("List", new { page,pageSize=ViewBag.PageSize, CurrentFilterTm = Model.CurrentFilterTm,CurrentFilterKv = @Model.CurrentFilterKv,CurrentFilterHucre = @Model.CurrentFilterHucre,CurrentFilterFider = @Model.CurrentFilterFider,CurrentFilterIp = @Model.CurrentFilterIp,CurrentFilterRole = @Model.CurrentFilterRole,RelayInformationList=Model.RelayInformationList}), new PagedListRenderOptions {
            UlElementClasses = new[] { "pagination", "my-custom-class" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" }
            })

        </div>
    </div>
</div>



<script src="~/js/relayInformation.js"></script>

<script>
    document.getElementById('uploadExcel').addEventListener('submit', function (e) {
        e.preventDefault();
        var form = e.target;
        var formData = new FormData(form);
        var url = '@Url.Action("ImportExcel", "RelayInformation")';
        var xhr = new XMLHttpRequest();
        xhr.open("POST", url, true);
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4 && xhr.status === 200) {
                // Yükleme tamamlandıktan sonra yapılacak işlemler

                // "yükleniyor" mesajını gizle
                document.getElementById('loading-indicator').classList.add('d-none');
                // "Excel'den verileri almak için dosya seçip yükleyin." mesajını göster
                document.getElementById('excel-message').classList.remove('d-none');

                location.reload();
            }
        };

        // Yükleme başladığında "yükleniyor" mesajını göster
        document.getElementById('loading-indicator').classList.remove('d-none');
        // "Excel'den verileri almak için dosya seçip yükleyin." mesajını gizle
        document.getElementById('excel-message').classList.add('d-none');

        xhr.send(formData);
    });

    function togglePassword(icon) {
        var passwordSpan = icon.previousElementSibling;
        var password = passwordSpan.getAttribute('data-password');
        var eyeIcon = icon.querySelector('img');

        if (passwordSpan.textContent === '******') {
            $.ajax({
                url: '@Url.Action("DecryptData","RelayInformation")',
                type: 'POST',
                data: {
                    text: password
                },
                success: function (data) {
                    // JSON'dan çözülen şifreyi al
                    var decrypted = data.decrypt;
                    // Şifreyi kullanıcıya göster

                    passwordSpan.textContent = decrypted;
                    eyeIcon.src = '/img/eye-slash-fill.svg';
                },
                error: function (error) {
                    console.log('Hata:', error);
                }
            });
        } else {
            passwordSpan.textContent = '******';
            eyeIcon.src = '/img/eye-fill.svg';
        }
    }



</script>